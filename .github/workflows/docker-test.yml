name: Docker Test

on:
  push:
    branches: 
      - feature/*
      - feat/*
      - fix/*
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker-test-alpine:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Check version
        run: echo "VERSION=$(echo '${{ github.event.head_commit.message }}' | grep -o 'v[0-9.]\+')" >> $GITHUB_ENV

      - name: Build alpine docker image
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile.alpine
          push: false
          load: true
          tags: localbuild/testimage:alpine
      
      - name: Scan docker image
        uses: anchore/scan-action@v3
        with: 
          image: localbuild/testimage:alpine
          fail-build: true
          severity-cutoff: critical

  docker-test-ubuntu:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Check version
        run: echo "VERSION=$(echo '${{ github.event.head_commit.message }}' | grep -o 'v[0-9.]\+')" >> $GITHUB_ENV

      - name: Build alpine docker image
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile.ubuntu
          push: false
          load: true
          tags: localbuild/testimage:ubuntu
      
      - name: Scan docker image
        uses: anchore/scan-action@v3
        with: 
          image: localbuild/testimage:ubuntu
          fail-build: true
          severity-cutoff: critical